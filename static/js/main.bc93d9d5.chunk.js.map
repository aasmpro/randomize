{"version":3,"sources":["components/item/component.tsx","components/random-item/component.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Item","increase","e","_this","props","handleAmount","item","id","amount","decrease","changeTitle","newTitle","target","value","handleTitle","delete","deleteItem","react_default","a","createElement","className","onClick","this","title","onChange","React","Component","RandomItem","state","seen","see","setState","alert","data","disabled","label","shuffle","i","length","j","Math","floor","random","_ref","App","count","items","randomView","randomItems","total","reduce","preItem","curItem","map","Object","objectSpread","addItem","concat","toConsumableArray","filter","randomize","list","forEach","push","_this2","index","component_RandomItem","key","component_Item","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bc93d9d5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Item extends React.Component<any, any>{\n  increase = (e: any) => {\n    this.props.handleAmount(this.props.item.id, this.props.item.amount+1);\n  }\n\n  decrease = (e: any) => {\n    if(this.props.item.amount > 1){\n      this.props.handleAmount(this.props.item.id, this.props.item.amount-1);\n    }\n  }\n\n  changeTitle = (e: any) => {\n    const newTitle = e.target.value;\n    this.props.handleTitle(this.props.item.id, newTitle);\n  }\n\n  delete = (e: any) => {\n    this.props.deleteItem(this.props.item.id);\n  }\n\n  render() {\n    return (\n      <div className=\"item\">\n        <button onClick={this.delete}>X</button>\n        <input value={this.props.item.title} onChange={this.changeTitle}/>\n        <button onClick={this.decrease}>-</button>\n        <span>{this.props.item.amount}</span>\n        <button onClick={this.increase}>+</button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './style.css'\n\nexport default class RandomItem extends React.Component<any, any>{\n  state = {\n    seen: false\n  }\n\n  see = (e: any) => {\n    this.setState({\n      seen: true\n    })\n    alert(this.props.data)\n  }\n\n  render() {\n    return (\n      <button\n        className={this.state.seen ? 'random-item' : 'random-item'}\n        disabled={this.state.seen}\n        onClick={this.see}>{this.props.label}</button>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Item from './item/component';\nimport RandomItem from './random-item/component';\n\nfunction shuffle(a: any) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default class App extends React.Component<any, any, any>{\n  count = 0;\n  state = {\n    items: [],\n    randomView: false,\n    randomItems: []\n  }\n\n  total = () => {\n    return this.state.items.reduce((preItem: any, curItem: any) => {\n      return preItem + curItem.amount;\n    }, 0);\n  }\n\n  handleTitle = (id: number, title: string) => {\n    this.setState((state: any, props: any) => ({\n      items: state.items.map((item: any) => (item.id === id ? {...item, title} : item))\n    }));\n  }\n\n  handleAmount = (id: number, amount: number) => {\n    this.setState((state: any, props: any) => ({\n      items: state.items.map((item: any) => (item.id === id ? {...item, amount} : item))\n    }));\n  }\n\n  addItem = () => {\n    this.setState((state: any, props: any)=>({\n      items: [...state.items, {\n        id: this.count,\n        title: `item ${this.count}`,\n        amount: 1\n      }],\n    }));\n    this.count += 1;\n  }\n\n  deleteItem = (id: number) => {\n    this.setState((state: any, props: any)=>({\n      items: state.items.filter((item: any) => item.id !== id)\n    }));\n  }\n\n  randomize = () => {\n    let list: any[] = [];\n    this.state.items.forEach((item: any)=> {\n      for(let i=0; i<item.amount; i++){\n        list.push(item.title)\n      }\n    })\n    this.setState((state: any, props: any)=>({\n      randomItems: shuffle(list),\n      randomView: true\n    }));\n  }\n\n  render() {\n    if(this.state.randomView){\n      return (\n        <div>\n          <div>\n            {this.state.randomItems.map((item: any, index: number)=>\n              <RandomItem data={item}\n                          label={index+1}\n                          key={index}\n                          />\n            )}\n          </div>\n          <button onClick={() => {this.setState({randomView: false})}}>X</button>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div id=\"total\">{this.total()}</div>\n          <div>\n            {this.state.items.map((item: any)=>\n              <Item item={item}\n                    key={item.id}\n                    deleteItem={this.deleteItem}\n                    handleTitle={this.handleTitle}\n                    handleAmount={this.handleAmount}\n                    />\n            )}\n          </div>\n          <button onClick={this.addItem}>+</button>\n          <button onClick={this.randomize}>randomize</button>\n        </div>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}