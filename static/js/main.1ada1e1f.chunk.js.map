{"version":3,"sources":["components/item/component.tsx","components/random-item/component.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Item","increase","e","_this","props","handleAmount","item","id","amount","decrease","changeTitle","newTitle","target","value","handleTitle","delete","deleteItem","react_default","a","createElement","card","size","bodyStyle","padding","actions","LeftOutlined","onClick","this","RightOutlined","input","title","onChange","addonAfter","CloseOutlined","style","borderRadius","fontSize","React","Component","RandomItem","state","seen","see","setState","Modal","info","data","centered","icon","textAlign","className","label","Content","Layout","shuffle","i","length","j","Math","floor","random","_ref","App","count","items","randomView","randomItems","total","reduce","preItem","curItem","map","Object","objectSpread","addItem","concat","toConsumableArray","filter","randomize","flatMap","split","Array","fill","_this2","layout","list","grid","gutter","xs","sm","md","lg","xl","dataSource","renderItem","index","component_RandomItem","key","marginBottom","es_button","block","component_Item","PlusCircleOutlined","SwapOutlined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1ada1e1f.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Input } from 'antd';\nimport { CloseOutlined, RightOutlined, LeftOutlined } from '@ant-design/icons';\n\nexport default class Item extends React.Component<any, any> {\n  increase = (e: any) => {\n    this.props.handleAmount(this.props.item.id, this.props.item.amount + 1);\n  };\n\n  decrease = (e: any) => {\n    if (this.props.item.amount > 1) {\n      this.props.handleAmount(this.props.item.id, this.props.item.amount - 1);\n    }\n  };\n\n  changeTitle = (e: any) => {\n    const newTitle = e.target.value;\n    this.props.handleTitle(this.props.item.id, newTitle);\n  };\n\n  delete = (e: any) => {\n    this.props.deleteItem(this.props.item.id);\n  };\n\n  render() {\n    return (\n      <Card\n        size=\"small\"\n        bodyStyle={{ padding: 0 }}\n        actions={[\n          <LeftOutlined onClick={this.decrease} />,\n          <span>{this.props.item.amount}</span>,\n          <RightOutlined onClick={this.increase} />\n        ]}>\n        <Input\n          value={this.props.item.title}\n          onChange={this.changeTitle}\n          size=\"large\"\n          addonAfter={\n            <CloseOutlined\n              style={{ borderRadius: 0, fontSize: '1.4rem' }}\n              onClick={this.delete}\n            />\n          }\n        />\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport { Card, Modal } from 'antd';\n\nexport default class RandomItem extends React.Component<any, any> {\n  state = {\n    seen: false\n  };\n\n  see = (e: any) => {\n    if (!this.state.seen) {\n      this.setState({\n        seen: true\n      });\n      Modal.info({\n        title: this.props.data,\n        centered: true,\n        icon: ''\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Card\n        style={{ textAlign: 'center' }}\n        onClick={this.see}\n        className={this.state.seen ? 'random-item seen' : 'random-item'}>\n        {this.props.label}\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport Item from './item/component';\nimport RandomItem from './random-item/component';\nimport { Layout, Button, List } from 'antd';\nimport {\n  CloseOutlined,\n  PlusCircleOutlined,\n  SwapOutlined\n} from '@ant-design/icons';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nconst { Content } = Layout;\n\nfunction shuffle(a: any) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default class App extends React.Component<any, any, any> {\n  count = 0;\n  state = {\n    items: [],\n    randomView: false,\n    randomItems: []\n  };\n\n  total = () => {\n    return this.state.items.reduce((preItem: any, curItem: any) => {\n      return preItem + curItem.amount;\n    }, 0);\n  };\n\n  handleTitle = (id: number, title: string) => {\n    this.setState((state: any, props: any) => ({\n      items: state.items.map((item: any) =>\n        item.id === id ? { ...item, title } : item\n      )\n    }));\n  };\n\n  handleAmount = (id: number, amount: number) => {\n    this.setState((state: any, props: any) => ({\n      items: state.items.map((item: any) =>\n        item.id === id ? { ...item, amount } : item\n      )\n    }));\n  };\n\n  addItem = () => {\n    this.setState((state: any, props: any) => ({\n      items: [\n        ...state.items,\n        {\n          id: this.count,\n          title: `item ${this.count}`,\n          amount: 1\n        }\n      ]\n    }));\n    this.count += 1;\n  };\n\n  deleteItem = (id: number) => {\n    this.setState((state: any, props: any) => ({\n      items: state.items.filter((item: any) => item.id !== id)\n    }));\n  };\n\n  randomize = () => {\n    this.setState((state: any, props: any) => ({\n      randomItems: shuffle(\n        this.state.items.flatMap((item: any) => {\n          let label = item.title.split('/')[\n            Math.floor(Math.random() * item.title.split('/').length)\n          ];\n          return Array(item.amount).fill(label);\n        })\n      ),\n      randomView: true\n    }));\n  };\n\n  render() {\n    if (this.state.randomView) {\n      return (\n        <Layout>\n          <Content>\n            <List\n              grid={{ gutter: 10, xs: 3, sm: 4, md: 6, lg: 6, xl: 8 }}\n              dataSource={this.state.randomItems}\n              renderItem={(item: any, index: number) => (\n                <List.Item>\n                  <RandomItem data={item} label={index + 1} key={index} />\n                </List.Item>\n              )}\n            />\n            <div style={{ marginBottom: '45px' }} />\n          </Content>\n          <Button\n            onClick={() => {\n              this.setState({ randomView: false });\n            }}\n            className=\"bottom-fixed\"\n            block>\n            <CloseOutlined style={{ fontSize: '1.4rem' }} />\n          </Button>\n        </Layout>\n      );\n    } else {\n      return (\n        <Layout>\n          <Content>\n            <p id=\"total\">{this.total()}</p>\n            <div>\n              {this.state.items.map((item: any) => (\n                <Item\n                  item={item}\n                  key={item.id}\n                  deleteItem={this.deleteItem}\n                  handleTitle={this.handleTitle}\n                  handleAmount={this.handleAmount}\n                />\n              ))}\n            </div>\n            <PlusCircleOutlined className=\"add-item\" onClick={this.addItem} />\n            <p>Use / in titles to create random choice</p>\n            <Button onClick={this.randomize} className=\"bottom-fixed\" block>\n              <SwapOutlined style={{ fontSize: '1.5rem' }} />\n            </Button>\n          </Content>\n        </Layout>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}